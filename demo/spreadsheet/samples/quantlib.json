{"data": [[6, 5, "\"Strike\"", "Strike", null], [6, 6, "2017-6-27", {"_type": "datetime.date", "value": [2017, 6, 27]}, null], [6, 7, "2017-9-27", {"_type": "datetime.date", "value": [2017, 9, 27]}, null], [6, 8, "2017-12-27", {"_type": "datetime.date", "value": [2017, 12, 27]}, null], [6, 9, "2018-6-27", {"_type": "datetime.date", "value": [2018, 6, 27]}, null], [7, 5, "0.67263", 0.67263, null], [7, 6, "0.144183920277296", 0.144183920277296, ".4f"], [7, 7, "0.139374695503699", 0.139374695503699, ".4f"], [7, 8, "0.135526204819277", 0.135526204819277, ".4f"], [7, 9, "0.12885", 0.12885, ".4f"], [8, 5, "0.71865", 0.71865, null], [8, 6, "0.133703802426343", 0.133703802426343, ".4f"], [8, 7, "0.129893056346044", 0.129893056346044, ".4f"], [8, 8, "0.126909006024096", 0.126909006024096, ".4f"], [8, 9, "0.12175", 0.12175, ".4f"], [9, 5, "0.7487", 0.7487, null], [9, 6, "0.126860526863085", 0.126860526863085, ".4f"], [9, 7, "0.123701764371087", 0.123701764371087, ".4f"], [9, 8, "0.121209416342412", 0.121209416342412, ".4f"], [9, 9, "0.11695", 0.11695, ".4f"], [10, 5, "0.77129", 0.77129, null], [10, 6, "0.121720863192182", 0.121720863192182, ".4f"], [10, 7, "0.118881707209199", 0.118881707209199, ".4f"], [10, 8, "0.116979766476388", 0.116979766476388, ".4f"], [10, 9, "0.11381", 0.11381, ".4f"], [11, 5, "0.78984", 0.78984, null], [11, 6, "0.117581136690647", 0.117581136690647, ".4f"], [11, 7, "0.115218428824572", 0.115218428824572, ".4f"], [11, 8, "0.113899219047619", 0.113899219047619, ".4f"], [11, 9, "0.11163", 0.11163, ".4f"], [12, 5, "0.80587", 0.80587, null], [12, 6, "0.114363421052632", 0.114363421052632, ".4f"], [12, 7, "0.112523118729097", 0.112523118729097, ".4f"], [12, 8, "0.111637193240265", 0.111637193240265, ".4f"], [12, 9, "0.11019", 0.11019, ".4f"], [13, 5, "0.82034", 0.82034, null], [13, 6, "0.111728795180723", 0.111728795180723, ".4f"], [13, 7, "0.110489402985075", 0.110489402985075, ".4f"], [13, 8, "0.109987692307692", 0.109987692307692, ".4f"], [13, 9, "0.10921", 0.10921, ".4f"], [14, 5, "0.83379", 0.83379, null], [14, 6, "0.109805703883495", 0.109805703883495, ".4f"], [14, 7, "0.109100413723512", 0.109100413723512, ".4f"], [14, 8, "0.108870460584588", 0.108870460584588, ".4f"], [14, 9, "0.1086", 0.1086, ".4f"], [15, 5, "0.84658", 0.84658, null], [15, 6, "0.108581646586345", 0.108581646586345, ".4f"], [15, 7, "0.108250493273543", 0.108250493273543, ".4f"], [15, 8, "0.108197213114754", 0.108197213114754, ".4f"], [15, 9, "0.10829", 0.10829, ".4f"], [16, 5, "0.85792", 0.85792, null], [16, 6, "0.108190964125561", 0.108190964125561, ".4f"], [16, 7, "0.107986172506739", 0.107986172506739, ".4f"], [16, 8, "0.10796631037213", 0.10796631037213, ".4f"], [16, 9, "0.10822", 0.10822, ".4f"], [17, 5, "0.87354", 0.87354, null], [17, 6, "0.10859510460251", 0.10859510460251, ".4f"], [17, 7, "0.108310304612707", 0.108310304612707, ".4f"], [17, 8, "0.108232350773766", 0.108232350773766, ".4f"], [17, 9, "0.10849", 0.10849, ".4f"], [18, 5, "0.89085", 0.89085, null], [18, 6, "0.110043016488846", 0.110043016488846, ".4f"], [18, 7, "0.109404567049808", 0.109404567049808, ".4f"], [18, 8, "0.109102906403941", 0.109102906403941, ".4f"], [18, 9, "0.10919", 0.10919, ".4f"], [19, 5, "0.90904", 0.90904, null], [19, 6, "0.112447321958457", 0.112447321958457, ".4f"], [19, 7, "0.111343238289206", 0.111343238289206, ".4f"], [19, 8, "0.110615417475728", 0.110615417475728, ".4f"], [19, 9, "0.11036", 0.11036, ".4f"], [20, 5, "0.9289", 0.9289, null], [20, 6, "0.115567066189624", 0.115567066189624, ".4f"], [20, 7, "0.113888152866242", 0.113888152866242, ".4f"], [20, 8, "0.112830993150685", 0.112830993150685, ".4f"], [20, 9, "0.11201", 0.11201, ".4f"], [21, 5, "0.95157", 0.95157, null], [21, 6, "0.119454321849106", 0.119454321849106, ".4f"], [21, 7, "0.117151688909342", 0.117151688909342, ".4f"], [21, 8, "0.115569047072331", 0.115569047072331, ".4f"], [21, 9, "0.11433", 0.11433, ".4f"], [22, 5, "0.97862", 0.97862, null], [22, 6, "0.123858310308183", 0.123858310308183, ".4f"], [22, 7, "0.121275916334661", 0.121275916334661, ".4f"], [22, 8, "0.119199029605263", 0.119199029605263, ".4f"], [22, 9, "0.11731", 0.11731, ".4f"], [23, 5, "1.01337", 1.01337, null], [23, 6, "0.129434558979809", 0.129434558979809, ".4f"], [23, 7, "0.126231870274572", 0.126231870274572, ".4f"], [23, 8, "0.123929902439024", 0.123929902439024, ".4f"], [23, 9, "0.12145", 0.12145, ".4f"], [24, 5, "1.06261", 1.06261, null], [24, 6, "0.137335982996812", 0.137335982996812, ".4f"], [24, 7, "0.133099606048548", 0.133099606048548, ".4f"], [24, 8, "0.12994278699187", 0.12994278699187, ".4f"], [24, 9, "0.12723", 0.12723, ".4f"], [25, 5, "1.14631", 1.14631, null], [25, 6, "0.150767120085016", 0.150767120085016, ".4f"], [25, 7, "0.144773641066454", 0.144773641066454, ".4f"], [25, 8, "0.140163713821138", 0.140163713821138, ".4f"], [25, 9, "0.13547", 0.13547, ".4f"], [5, 5, "\"Volatility Surface\"", "Volatility Surface", null], [6, 1, "\"Calendar\"", "Calendar", null], [6, 2, "ql.TARGET()", {"_type": "json_helper.InvalidCell", "value": ""}, null], [7, 1, "\"Today\"", "Today", null], [7, 2, "set_evaluation_date(ql.Date(4, 4, 2017))", {"_type": "json_helper.InvalidCell", "value": ""}, null], [9, 1, "\"Day Count\"", "Day Count", null], [9, 2, "ql.Actual360()", {"_type": "json_helper.InvalidCell", "value": ""}, null], [5, 1, "\"Date set up\"", "Date set up", null], [5, 6, "\"Expiry\"", "Expiry", null], [11, 1, "\"Option params\"", "Option params", null], [12, 1, "\"Option Type\"", "Option Type", null], [12, 2, "ql.Option.Call", 1, null], [13, 1, "\"Average Type\"", "Average Type", null], [13, 2, "ql.Average.Arithmetic", 0, null], [14, 1, "\"Maturity\"", "Maturity", null], [14, 2, "ql.Date(4,4,2018)", {"_type": "json_helper.InvalidCell", "value": ""}, null], [15, 1, "\"Strike\"", "Strike", null], [15, 2, ".74", 0.74, null], [16, 1, "\"Volatility\"", "Volatility", null], [16, 2, " 0.07053702474", 0.07053702474, null], [17, 1, "\"Observation Start\"", "Observation Start", null], [17, 2, "ql.Date(4, 3, 2018)", {"_type": "json_helper.InvalidCell", "value": ""}, null], [19, 1, "\"Model params\"", "Model params", null], [20, 1, "\"Underlying\"", "Underlying", null], [21, 1, "\"Dividend yield\"", "Dividend yield", null], [22, 1, "\"Risk free rate\"", "Risk free rate", null], [20, 2, "0.748571186", 0.748571186, null], [21, 2, ".04125", 0.04125, null], [22, 2, "0.0225377", 0.0225377, null], [24, 1, "\"Derived params\"", "Derived params", null], [25, 1, "\"Exercise\"", "Exercise", null], [26, 1, "\"Payoff\"", "Payoff", null], [25, 2, "ql.EuropeanExercise(r14c)", {"_type": "json_helper.InvalidCell", "value": ""}, null], [26, 2, "ql.PlainVanillaPayoff(r12c, r15c)", {"_type": "json_helper.InvalidCell", "value": ""}, null], [28, 1, "\"Market Data\"", "Market Data", null], [29, 2, "ql.QuoteHandle(ql.SimpleQuote(r20c))\n", {"_type": "json_helper.InvalidCell", "value": ""}, null], [12, 3, "\"-1 for put, 1 for call\"", "-1 for put, 1 for call", null], [13, 3, "\"0 for arithmetic\"", "0 for arithmetic", null], [8, 3, "\"TODO: move to editor\"", "TODO: move to editor", null], [30, 2, "ql.YieldTermStructureHandle(ql.FlatForward(r7c, r21c, r9c))", {"_type": "json_helper.InvalidCell", "value": ""}, null], [31, 2, "ql.YieldTermStructureHandle(ql.FlatForward(r7c, r22c, r9c))", {"_type": "json_helper.InvalidCell", "value": ""}, null], [32, 2, "ql.BlackVolTermStructureHandle(ql.BlackConstantVol(r7c, r6c, r15c, r9c))", {"_type": "json_helper.InvalidCell", "value": ""}, null], [29, 1, "\"Underlying Handle\"", "Underlying Handle", null], [30, 1, "\"YTS Div Handle\"", "YTS Div Handle", null], [31, 1, "\"YTS RFR Handle\"", "YTS RFR Handle", null], [32, 1, "\"BVTS Const Handle\"", "BVTS Const Handle", null], [34, 1, "\"Volatility Surface\"", "Volatility Surface", null], [35, 2, "BlackVolTermStructureHandleFromMatrix(r6c, r6c6:r6c9[0], rows_to_cols(r7c5:r25c5)[0], r7c6:r25c9, r9c, r7c)", {"_type": "json_helper.InvalidCell", "value": ""}, null], [35, 1, "\"BVTS Handle\"", "BVTS Handle", null], [37, 1, "\"Processes\"", "Processes", null], [38, 2, "ql.BlackScholesMertonProcess(r29c, r30c, r31c, r35c)", {"_type": "json_helper.InvalidCell", "value": ""}, null], [38, 1, "\"BS Process\"", "BS Process", null], [40, 1, "\"Pricing\"", "Pricing", null], [42, 2, "DiscreteAveragingAsianOptionWithPricer(r13c, 0, 0, r[-1]c, r26c, r25c, r38c)", {"_type": "json_helper.InvalidCell", "value": ""}, null], [41, 2, "list(ql.Schedule(r17c, r14c, ql.Period(\"1D\"), r6c, ql.Following, ql.Following, ql.DateGeneration.Forward, False))", [{"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}, {"_type": "json_helper.InvalidCell", "value": ""}], null], [41, 1, "\"Fixing Dates\"", "Fixing Dates", null], [42, 1, "\"Instrument\"", "Instrument", null], [43, 1, "\"NPV\"", "NPV", null], [43, 2, "r[-1]c.NPV()", 0.033582484639733186, null], [35, 3, "rc[-1].maxStrike()", 1.14631, null]], "code": "import QuantLib as ql\n\ndef set_evaluation_date(dt):\n    ql.Settings.instance().setEvaluationDate(dt)\n    return ql.Settings.instance().evaluationDate\n\ndef BlackVolTermStructureHandleFromMatrix(calendar, expirations, strikes, vol_matrix, day_count, today):\n    expirations = [ql.Date.from_date(dt) for dt in expirations]\n    sfc = ql.BlackVarianceSurface(today, calendar, expirations, strikes, vol_matrix, day_count)\n    sfc.setInterpolation(\"Bicubic\")\n    sfc.enableExtrapolation()\n    return ql.BlackVolTermStructureHandle(sfc)\n\ndef rows_to_cols(data):\n    return [list(c) for c in zip(*data)]\n\ndef DiscreteAveragingAsianOptionWithPricer(average_type, running_accum, past_fixings, fixing_dates, payoff, exercise, process):\n    opt = ql.DiscreteAveragingAsianOption(average_type, running_accum, past_fixings, fixing_dates, payoff, exercise)\n    engine = ql.MCDiscreteArithmeticAPEngine(process, \"LowDiscrepancy\", requiredSamples=1500)\n    opt.setPricingEngine(engine)\n    return opt\n", "grid_state": {"h_state": "AAAA/wAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjYAAAAUAAEBAAAAAAAAAAAAAAAAAGT/////AAAAhAAAAAAAAAAUAAAAggAAAAEAAAAAAAAAywAAAAEAAAAAAAAAlQAAAAEAAAAAAAAAOQAAAAEAAAAAAAAAdAAAAAEAAAAAAAAATQAAAAEAAAAAAAAATQAAAAEAAAAAAAAATQAAAAEAAAAAAAAATQAAAAEAAAAAAAAAOQAAAAEAAAAAAAAAOQAAAAEAAAAAAAAAOQAAAAEAAAAAAAAAOQAAAAEAAAAAAAAAOQAAAAEAAAAAAAAAOQAAAAEAAAAAAAAAOQAAAAEAAAAAAAAAOQAAAAEAAAAAAAAAOQAAAAEAAAAAAAAAOQAAAAEAAAAAAAAAOQAAAAEAAAAAAAAD6AAAAAAA", "v_state": "AAAA/wAAAAAAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJgAAABkAAEBAAAAAAAAAAAAAAAAAB7/////AAAAgQAAAAAAAABkAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAAFgAAAAEAAAAAAAAD6AAAAAAA"}}